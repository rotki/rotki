{
  "name": "rotki-workspace",
  "version": "1.0.0",
  "packageManager": "pnpm@10.12.1",
  "description": "A portfolio tracking, asset analytics and tax reporting application specializing in Cryptoassets that protects your privacy",
  "type": "module",
  "license": "AGPL-3.0",
  "homepage": "https://rotki.com",
  "repository": "https://github.com/rotki/rotki",
  "author": "Rotki Solutions GmbH <info@rotki.com>",
  "scripts": {
    "preinstall": "npx only-allow pnpm && node scripts/check-versions.js",
    "electron:build": "pnpm run --filter @rotki/common && pnpm run --filter rotki electron:build",
    "electron:package": "pnpm run --filter rotki electron:package",
    "build": "pnpm run --filter @rotki/common build && pnpm run --filter rotki build",
    "build:app": "pnpm run --filter @rotki/common build && pnpm run --filter rotki build:app",
    "build:preview": "pnpm run --filter rotki build:preview",
    "docker:build": "pnpm run --filter @rotki/common build && pnpm run --filter rotki build --mode docker",
    "lint": "eslint .",
    "lint:all": "run-p lint \"lint:style {@}\" --",
    "lint:style": "pnpm run --filter rotki lint:style",
    "lint:fix": "eslint . --fix",
    "check": "pnpm run lint && pnpm run build && pnpm run test:unit",
    "check:all": "pnpm run lint && pnpm run build && pnpm run --filter @rotki/common test:unit --w app && pnpm run --filter rotki test:integration-ci && pnpm run --filter rotki test:contract",
    "clean:modules": "rimraf node_modules app/node_modules common/node_modules dev-proxy/node_modules app/dist app/electron-build app/.e2e common/lib && pnpm store prune",
    "dev": "tsx scripts/start-dev.ts",
    "preview": "pnpm run --filter rotki preview",
    "test": "pnpm run test:unit && pnpm run test:integration-ci && pnpm run test:contract",
    "test:unit": "pnpm run --filter rotki test:unit:run",
    "test:unit:watch": "pnpm run --filter rotki test:unit",
    "test:contract": "pnpm run --filter rotki test:contract",
    "test:integration": " pnpm run --filter rotki test:integration",
    "test:integration-ci": " pnpm run --filter rotki test:integration-ci",
    "dev:web": "tsx scripts/start-dev.ts --web",
    "setup:hooks": "cd .. && husky frontend/.husky",
    "lint-staged": "lint-staged",
    "copy": "tsx scripts/copy-data.ts",
    "get-protocols": "pnpm run --filter rotki get-protocols"
  },
  "devDependencies": {
    "@clack/prompts": "0.11.0",
    "@intlify/eslint-plugin-vue-i18n": "4.0.1",
    "@rotki/eslint-config": "4.1.0",
    "@rotki/eslint-plugin": "1.0.0",
    "argparse": "2.0.1",
    "cac": "6.7.14",
    "consola": "3.4.2",
    "dotenv": "16.5.0",
    "eslint": "9.29.0",
    "eslint-plugin-cypress": "5.1.0",
    "flag-icons": "7.5.0",
    "husky": "9.1.7",
    "jsdom": "26.1.0",
    "lint-staged": "16.1.2",
    "npm-run-all2": "8.0.4",
    "rimraf": "6.0.1",
    "semver": "7.7.2",
    "typescript": "5.8.3"
  },
  "engines": {
    "node": ">=22 <23",
    "pnpm": ">=10 <11"
  },
  "pnpm": {
    "allowUnusedPatches": true,
    "patchedDependencies": {
      "bignumber.js@9.1.2": "patches/bignumber.js@9.1.2.patch"
    },
    "onlyBuiltDependencies": [
      "@parcel/watcher",
      "bufferutil",
      "electron",
      "electron-winstaller",
      "esbuild",
      "keccak",
      "utf-8-validate",
      "vue-demi"
    ]
  },
  "lint-staged": {
    "*": "eslint",
    "app/src/**/*.{vue,scss}": "cd app && stylelint"
  }
}
