name: Rotki Nightly Tests

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - tests

env:
  PYTHON_VERSION: 3.9.13
  NODE_VERSION: 16
  PIP_VERSION: 22.1.2

jobs:
  test-backend:
    env:
      CI: true
      TEST_ENVIRONMENT: nightly
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-11 ]
    runs-on: ${{ matrix.os }}
    name: 'Backend tests on ${{ matrix.os }}'
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Cache rotkehlchen test directory
        uses: actions/cache@v3
        with:
          path: ~/.cache/.rotkehlchen-test-dir
          key: ${{ runner.os }}-testdir
      - name: Install dependencies
        run: |
          pip install --upgrade pip==${{ env.PIP_VERSION }} wheel
          pip install codecov pytest-cov
          pip install -r requirements_dev.txt
          pip install -e .
      - name: Run tests
        run: |
          COVERAGE_ARGS='--cov=./'
          if [ ${{ runner.os }} == 'macOS' ];
          then
            COVERAGE_ARGS=''
          fi
          PYTEST_ARGS='--durations=150'
          python pytestgeventwrapper.py $PYTEST_ARGS $COVERAGE_ARGS rotkehlchen/tests  && python pytestgeventwrapper.py --dead-fixtures
      - name: Upload coverage
        run: bash ./.github/.codecov -F backend

  test-integration:
    name: 'Frontend e2e tests'
    needs: [ 'test-backend' ]
    env:
      CI: true
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Store frontend cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/Cypress  
            frontend/app/components.d.ts
          key: ${{ runner.os }}-e2e-js-${{ hashFiles('frontend/package-lock.json') }}
      - name: Store test data
        uses: actions/cache@v3
        with:
          path: |
            ~/rotki-e2e/icons
            ~/rotki-e2e/global_data
          key: ${{ runner.os }}-e2e-data-${{ hashFiles('rotkehlchen/data/global.db') }}
      - name: Setup backend
        run: |
          pip install --upgrade pip==${{ env.PIP_VERSION }} wheel
          pip install -r requirements.txt
          pip install -e .
      - name: Restore dependencies
        working-directory: ./frontend
        run: |
          npm install -g npm@8
          if ! npm ci --exit-code; then
            npm ci
          fi
          npm run build -w @rotki/common
      - name: Run e2e tests
        uses: cypress-io/github-action@v2
        env:
          ARGS: "--browser chrome"
          CYPRESS_ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        with:
          install: false
          command: npm run test:integration-ci
          working-directory: ./frontend/app
      - name: Upload coverage
        working-directory: ./frontend/app
        run: cd ../.. && ./.github/.codecov -F frontend_integration
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots-${{ runner.os }}
          path: ./frontend/app/tests/e2e/screenshots
      - name: Upload backend logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-logs-${{ runner.os }}
          path: ~/rotki-e2e-logs/*.log
      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: videos-${{ runner.os }}
          path: ./frontend/app/tests/e2e/videos
